#!/usr/bin/env bash

################################################################################

export BASE="$HOME/Documents/workspace/github"

################################################################################

function log() {
    echo "$@" >&2
}
export -f log

################################################################################

function invalid_syntax() {
    log "Usage: $0 <owner> [<repo>]" >&2
    exit 1
}

################################################################################

# TODO: Implement pagination
function get_user_repos() {
    set -o errexit
    set -o nounset
    set -o pipefail

    hubPath="$HOME/.config/hub"

    auth=""

    user=$(grep -Po '(?<=user: ).*$' "$hubPath" && echo "")
    token=$(grep -Po '(?<=oauth_token: ).*$' "$hubPath" && echo "")

    if [[ -n "$user" && -n "$token" ]]; then
        auth="-u $user:$token"
    fi

    owner="$1"

    curl -# "https://api.github.com/users/$owner/repos?per_page=100" $auth | \
        jq '.[] | select(.fork | not) | .full_name' -r
}

function get_repos_from_args() {
    set -o errexit
    set -o nounset
    set -o pipefail

    owner="$1"
    [[ -z "$owner" ]] && invalid_syntax
    shift;

    repos="$@"

    if [[ -z "$repos" ]]; then
      log "No repo specified. Searching every repository of \"$owner\"." >&2
      get_user_repos "$owner"
    else
      for i in $repos; do echo "$owner/$i"; done
    fi
}

################################################################################

function clone_or_fetch() {
    set -o errexit
    set -o nounset

    repo="$1"
    target="$BASE/$repo"
    url="git@github.com:$repo"

    if ! [[ -e "$target" ]]; then
      tmpdir="$(mktemp -d)"
      log "Cloning $target"
      git clone --quiet --depth 1 "$url" "$tmpdir"
      mkdir -p "$(dirname "$target")"
      mv -n "$tmpdir" "$target"
    else
      log "Updating $target"
      git -C "$target" fetch --quiet >&2
    fi
}
export -f clone_or_fetch

################################################################################

set -o errexit
set -o pipefail

get_repos_from_args "${@}" \
    | parallel --line-buffer -j 12 clone_or_fetch
